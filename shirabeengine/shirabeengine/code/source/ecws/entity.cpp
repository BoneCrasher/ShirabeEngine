//
// Created by dottideveloper on 22.11.19.
//
#include "ecws/entity.h"

namespace engine::ecws
{
    //<-----------------------------------------------------------------------------

    //<-----------------------------------------------------------------------------
    //
    //<-----------------------------------------------------------------------------
    CEntity::CEntity(std::string aName)
        : mName(std::move(aName))
    {}
    //<-----------------------------------------------------------------------------

    //<-----------------------------------------------------------------------------
    //
    //<-----------------------------------------------------------------------------
    CEntity::~CEntity()
    {
        deinitialize();
    }
    //<-----------------------------------------------------------------------------

    //<-----------------------------------------------------------------------------
    //
    //<-----------------------------------------------------------------------------
    EEngineStatus CEntity::initialize()
    {
        if(mRootComponent)
        {
            return mRootComponent->initialize();
        }
        return EEngineStatus::Ok;
    }
    //<-----------------------------------------------------------------------------

    //<-----------------------------------------------------------------------------
    //
    //<-----------------------------------------------------------------------------
    EEngineStatus CEntity::deinitialize()
    {
        if(mRootComponent)
        {
            return mRootComponent->deinitialize();
        }
        return EEngineStatus::Ok;
    }
    //<-----------------------------------------------------------------------------

    //<-----------------------------------------------------------------------------
    //
    //<-----------------------------------------------------------------------------
    EEngineStatus CEntity::update(CTimer const &aTimer)
    {
        if(mRootComponent)
        {
            return mRootComponent->update(aTimer);
        }
        return EEngineStatus::Ok;
    }
    //<-----------------------------------------------------------------------------
}
